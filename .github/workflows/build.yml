name: Build

on:
    push:
        branches-ignore:
            - 'dependabot/**'
    pull_request:
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-22.04

        name: "PHP ${{ matrix.php }}"

        strategy:
            fail-fast: false
            matrix:
                php: [ "7.4" ]

        steps:
            -
                uses: actions/checkout@v2

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none

            -
                name: Output PHP version for Symfony CLI
                run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}-1
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-
            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Validate composer.json
                run: composer validate --ansi

            -
                name: Psalm version
                run: vendor/bin/psalm --version

            -
                name: Run Psalm
                run: vendor/bin/psalm

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always

            -
                name: Run ecs
                run: vendor/bin/ecs check tests/ src/ --config ecs.php

            -
                name: Run ESLint
                run: npx eslint src/Resources/app/storefront/src/inpost-plugin/ --ext .js
